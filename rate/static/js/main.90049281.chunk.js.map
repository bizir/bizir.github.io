{"version":3,"sources":["utils/index.js","actions/ajax.js","store/RatePage.js","routes/WebPage.js","routes/ShopPage.js","store/UserPage.js","store/index.js","App.js","index.js"],"names":["getParamsUrl","param","obj","window","location","search","replace","split","map","s","forEach","o","host","cookies","Cookies","ajax","url","params","token","get","Object","objectSpread","axios","defaults","headers","common","initialState","user","myAccount","group","followers","followers_count","followers_loading","storeRatePage","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","getState","wrap","_context","prev","next","connect","subscribe","e","detail","type","payload","data","console","log","stop","_x","_x2","apply","this","arguments","_ref2","_callee2","_context2","send","_x3","_x4","groupId","sorter","_ref3","_callee3","_context3","abrupt","then","result","isSuccess","object","count","items","_x5","_x6","followerId","_ref4","_callee4","_context4","_x7","_x8","socialId","_ref5","_callee5","_context5","catch","_x9","_x10","getFollowers","getGroupById","getFollowerById","regVKApp","vkWebAppGetUserInfo","likeUrl","WebPage","userId","props","_this$props","react_default","createElement","nav_bar","mode","first_name","card","full","Header","title","concat","last_name","thumb","photo_100","thumbStyle","border-radius","width","extra","style","float","className","alt","src","balls","Body","grid","columnNum","text","num","icon","likes","comments","reposts","activeStyle","textAlign","name","photo100","borderRadius","f","i","key","white_space","size","paddingTop","text-align","Component","state","ratePage","bindActionCreators","Meta","ShopPage","tovars","row","background","leftContent","avatar","rightContent","margin","marginTop","gutter","list","xs","sm","md","lg","xl","xxl","pagination","pageSize","total","dataSource","renderItem","item","Item","tovarId","es_card","bordered","hoverable","actions","es_button","cover","photo","description","price","user_loading","groups","groups_loading","actions_count","actions_loading","statistic","allReducers","combineReducers","userPage","length","undefined","action","toConsumableArray","act","followersGroupActionId","isAddBalls","store","createStore","composeWithDevTools","applyMiddleware","thunk","App","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","activePanel","fetchedUser","react_router_dom","es","react_router","path","component","React","ReactDOM","render","src_App","document","getElementById"],"mappings":"qYAAaA,EAAe,SAACC,GAC5B,IAAIC,EAAM,GAMV,OALAC,OAAOC,SAASC,OACdC,QAAQ,IAAI,IACZC,MAAM,KACNC,IAAI,SAAAC,GAAC,OAAEA,EAAEF,MAAM,OACfG,QAAQ,SAACC,GAAD,OAAKT,EAAIS,EAAE,IAAMA,EAAE,KACtBT,EAAID,IAECW,EAAO,4FCPdC,EAAU,WAAIC,GAELC,EACV,SAACC,EAAIC,GACR,IAAIC,EAAQL,EAAQM,IAAI,SAGxB,OAFMF,EAAOA,OAAPG,OAAAC,EAAA,EAAAD,CAAA,GAAqBH,EAAOA,QAC5BK,IAAMC,SAASC,QAAQC,OAAvB,cAAiD,UAAYP,EAC5DI,IAAMH,IAAIH,EAAKC,ICMlBS,EAAe,CACjBC,KAAM,GACNC,UAAW,KACXC,MAAO,GACPC,UAAW,GACXC,gBAAiB,GACjBC,mBAAmB,GAGVC,EACC,iCAAAC,EAAAd,OAAAe,EAAA,EAAAf,CAAAgB,EAAAC,EAAAC,KAAM,SAAAC,EAAOC,EAAUC,GAAjB,OAAAL,EAAAC,EAAAK,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACZC,IAAQC,UAAU,SAACC,GACf,OAAQA,EAAEC,OAAOC,MACb,IAAK,4BAChBV,EAAS,CAAEU,KAhBH,OAgBeC,QAASH,EAAEC,OAAOG,OAC1B,MACJ,QACIC,QAAQC,IAAIN,EAAEC,OAAOC,SAPrB,wBAAAP,EAAAY,SAAAhB,MAAN,gBAAAiB,EAAAC,GAAA,OAAAvB,EAAAwB,MAAAC,KAAAC,YAAA,IADD3B,EAYY,iCAAA4B,EAAAzC,OAAAe,EAAA,EAAAf,CAAAgB,EAAAC,EAAAC,KAAM,SAAAwB,EAAOtB,EAAUC,GAAjB,OAAAL,EAAAC,EAAAK,KAAA,SAAAqB,GAAA,cAAAA,EAAAnB,KAAAmB,EAAAlB,MAAA,OACvBC,IAAQkB,KAAK,sBAAuB,IADb,wBAAAD,EAAAR,SAAAO,MAAN,gBAAAG,EAAAC,GAAA,OAAAL,EAAAH,MAAAC,KAAAC,YAAA,IAZZ3B,EAeK,SAACkC,EAAQC,GAAT,sBAAAC,EAAAjD,OAAAe,EAAA,EAAAf,CAAAgB,EAAAC,EAAAC,KAAoB,SAAAgC,EAAO9B,EAAUC,GAAjB,OAAAL,EAAAC,EAAAK,KAAA,SAAA6B,GAAA,cAAAA,EAAA3B,KAAA2B,EAAA1B,MAAA,UACb,MAAXsB,GAAmBA,EAAU,EADL,CAAAI,EAAA1B,KAAA,eAE1BL,EAAS,CAAEU,KA9BC,kBA8BsBC,QAAS,IAC3CX,EAAS,CAAEU,KAjCL,YAiCsBC,QAAS,KAHXoB,EAAAC,OAAA,iBAM9BhC,EAAS,CAAEU,KAnCO,oBAmCkBC,SAAS,IAC7C7B,EAAUV,EAAO,kCAAmC,CAChDK,OAAQ,CACJkD,UACAC,YAGPK,KAAK,SAACC,IACHA,EAASA,EAAOtB,MACLuB,YACPnC,EAAS,CAAEU,KA5CH,kBA4C0BC,QAASuB,EAAOE,OAAOC,QACzDrC,EAAS,CAAEU,KA/CT,YA+C0BC,QAASuB,EAAOE,OAAOE,QACnDtC,EAAS,CAAEU,KA/CD,oBA+C0BC,SAAS,OAlBvB,wBAAAoB,EAAAhB,SAAAe,MAApB,gBAAAS,EAAAC,GAAA,OAAAX,EAAAX,MAAAC,KAAAC,YAAA,IAfL3B,EAqCW,SAACkC,EAASc,GAAV,sBAAAC,EAAA9D,OAAAe,EAAA,EAAAf,CAAAgB,EAAAC,EAAAC,KAAyB,SAAA6C,EAAO3C,EAAUC,GAAjB,OAAAL,EAAAC,EAAAK,KAAA,SAAA0C,GAAA,cAAAA,EAAAxC,KAAAwC,EAAAvC,MAAA,UACpCoC,EADoC,CAAAG,EAAAvC,KAAA,eAAAuC,EAAAZ,OAAA,iBAEzClD,EAAUV,EAAO,kCAAmC,CAChDK,OAAQ,CACJkD,UACAc,gBAGHR,KAAK,SAACC,IACHA,EAASA,EAAOtB,MACLuB,UACHD,EAAOE,OAAOC,MAAQ,GACtBrC,EAAS,CAAEU,KA7DhB,aA6DkCC,QAASuB,EAAOE,OAAOE,MAAM,KAG9DtC,EAAS,CAAEU,KAhEZ,aAgE8BC,QAAS,SAfT,wBAAAiC,EAAA7B,SAAA4B,MAAzB,gBAAAE,EAAAC,GAAA,OAAAJ,EAAAxB,MAAAC,KAAAC,YAAA,IArCX3B,EAyDK,SAACsD,GAAD,sBAAAC,EAAApE,OAAAe,EAAA,EAAAf,CAAAgB,EAAAC,EAAAC,KAAc,SAAAmD,EAAOjD,EAAUC,GAAjB,OAAAL,EAAAC,EAAAK,KAAA,SAAAgD,GAAA,cAAAA,EAAA9C,KAAA8C,EAAA7C,MAAA,OAExBvB,EAAUV,EAAO,sBAAuB,CACpCK,OAAQ,CACJsE,cAGHd,KAAK,SAACC,IACHA,EAASA,EAAOtB,MACLuB,UACPnC,EAAS,CAAEU,KAnFX,cAmF8BC,QAASuB,EAAOE,SAE9CpC,EAAS,CAAEU,KArFX,cAqF8BC,QAAS,SAG5CwC,MAAM,SAAC3C,GACNK,QAAQC,IAAIN,GACZR,EAAS,CAAEU,KA1FP,cA0F0BC,QAAS,SAjBvB,wBAAAuC,EAAAnC,SAAAkC,MAAd,gBAAAG,EAAAC,GAAA,OAAAL,EAAA9B,MAAAC,KAAAC,YAAA,ICtEVkC,EAA+E7D,EAAjE8D,EAAiE9D,EAAnD+D,EAAmD/D,EAAlCgE,EAAkChE,EAAxBiE,EAAwBjE,EAEjFkE,EAAU,2BAKVC,8LAEE,IAAIjC,EAAUnE,EAAa,eACvBqG,EAASrG,EAAa,cAE1B2D,KAAK2C,MAAML,WACXtC,KAAK2C,MAAMJ,sBACXvC,KAAK2C,MAAMR,aAAa3B,GACxBR,KAAK2C,MAAMP,aAAa5B,GACxBR,KAAK2C,MAAMN,gBAAgB7B,EAASkC,oCAE/B,IAAAE,EACwC5C,KAAK2C,MAA1CxE,EADHyE,EACGzE,UAAWD,EADd0E,EACc1E,MAAOD,EADrB2E,EACqB3E,UAAUD,EAD/B4E,EAC+B5E,KACpC,OACI6E,EAAAnE,EAAAoE,cAAA,WACID,EAAAnE,EAAAoE,cAAAC,EAAA,GACIC,KAAK,QADT,8CAMI9E,EACI2E,EAAAnE,EAAAoE,cAAA,WAEhB9E,EAAKiF,YACLJ,EAAAnE,EAAAoE,cAAAI,EAAA,GAAMC,MAAI,GACTN,EAAAnE,EAAAoE,cAAAI,EAAA,EAAME,OAAN,CACCC,MAAK,GAAAC,OAAKtF,EAAKiF,WAAV,KAAAK,OAAwBtF,EAAKuF,WAClCC,MAAK,GAAAF,OAAKtF,EAAKyF,WACfC,WAAY,CACXC,gBAAiB,MACjBC,MAAS,QAEVC,MACChB,EAAAnE,EAAAoE,cAAA,OAAKgB,MAAO,CAAEC,MAAS,SAAWC,UAAU,0BAC3CnB,EAAAnE,EAAAoE,cAAA,OAAKmB,IAAI,GAAGC,IArCP,uBAsCgCjG,EAAUA,EAAUkG,MAAM,KAIlEtB,EAAAnE,EAAAoE,cAAAI,EAAA,EAAMkB,KAAN,KAEEnG,EACC4E,EAAAnE,EAAAoE,cAAAuB,EAAA,GAAML,UAAW,OAAQM,UAAW,EAAG7E,KAAM,CACL,CACI8E,KAAMtG,EAAUuG,KACxD,CACwCC,KAAMjC,EACN+B,KAAMtG,EAAUyG,OACxD,CACwCD,KAtDrC,4BAuDqCF,KAAMtG,EAAU0G,UACxD,CACwCF,KAxDtC,oBAyDsCF,KAAMtG,EAAU2G,UAEzDC,aAAa,IACdhC,EAAAnE,EAAAoE,cAAA,MAAIgB,MAAO,CAAEgB,UAAW,WAAxB,0HAKcjC,EAAAnE,EAAAoE,cAAA,MAAIgB,MAAO,CAAEgB,UAAW,WAAxB,wCACAjC,EAAAnE,EAAAoE,cAAAI,EAAA,GAAMC,MAAI,GACNN,EAAAnE,EAAAoE,cAAAI,EAAA,EAAME,OAAN,CACIC,MAAOnF,EAAM6G,KACbvB,MAAOtF,EAAM8G,SACbtB,WAAY,CACRuB,aAAc,OAElBpB,MACIhB,EAAAnE,EAAAoE,cAAA,OAAKgB,MAAO,CAAEC,MAAS,SAAWC,UAAU,8BAMxDnB,EAAAnE,EAAAoE,cAAA,MAAIgB,MAAO,CAAEgB,UAAW,WAAxB,iHAEI3G,EAAUtB,IAAI,SAACqI,EAAGC,GAAJ,OAAUtC,EAAAnE,EAAAoE,cAAA,OAAKsC,IAAKF,EAAE5D,YAChCuB,EAAAnE,EAAAoE,cAAAuC,EAAA,GAAYC,KAAK,OACjBzC,EAAAnE,EAAAoE,cAAAI,EAAA,GAAMC,MAAI,GACNN,EAAAnE,EAAAoE,cAAAI,EAAA,EAAME,OAAN,CACIC,MAAO6B,EAAEH,KACTvB,MAAO0B,EAAEF,SACTtB,WAAY,CACRuB,aAAc,MACdrB,MAAS,QAEbC,MACIhB,EAAAnE,EAAAoE,cAAA,OAAKgB,MAAO,CAAEC,MAAS,SAAWC,UAAU,0BACxCnB,EAAAnE,EAAAoE,cAAA,OAAKmB,IAAI,GAAGC,IA7F/C,uBA8FoCgB,EAAEf,SAIftB,EAAAnE,EAAAoE,cAAAI,EAAA,EAAMkB,KAAN,KACIvB,EAAAnE,EAAAoE,cAAAuB,EAAA,GAAML,UAAW,OAAQM,UAAW,EAAG7E,KAAM,CACzC,CACI8E,KAAMW,EAAEV,KACT,CACCC,KAAMjC,EACN+B,KAAMW,EAAER,OACT,CACCD,KA5GjC,4BA6GiCF,KAAMW,EAAEP,UACT,CACCF,KA9GlC,oBA+GkCF,KAAMW,EAAEN,UAEbC,aAAa,UAM3BhC,EAAAnE,EAAAoE,cAAA,MAAIgB,MAAO,CAAEyB,WAAY,IAAKC,aAAc,WAA5C,4KApHXC,aAuIPtG,kBAXf,SAA0BuG,GACtB,MAAO,CACHvH,UAAUuH,EAAMC,SAASxH,UACzBD,MAAOwH,EAAMC,SAASzH,MACtBD,UAAWyH,EAAMC,SAAS1H,UAC1BD,KAAM0H,EAAMC,SAAS3H,OAG7B,SAA8Ba,GAC1B,OAAO+G,6BAAmB,CAAEzD,eAAcC,eAAcC,kBAAiBC,WAAUC,uBAAsB1D,IAE9FM,CAA8CsD,4FC7IrDoD,oBAIFC,gOAIO,IAAAlD,EACyB5C,KAAK2C,MAA3B1E,EADH2E,EACG3E,UAAW8H,EADdnD,EACcmD,OACnB,OACIlD,EAAAnE,EAAAoE,cAAAkD,EAAA,GAAKlC,MAAO,CAAEmC,WAAY,qCAAuCjC,UAAU,QACvEnB,EAAAnE,EAAAoE,cAAAC,EAAA,GACIC,KAAK,OACLkD,YAAa,CACTrD,EAAAnE,EAAAoE,cAAAqD,EAAA,GAAQjC,IAAI,sEAEhBkC,aAAc,CACVvD,EAAAnE,EAAAoE,cAAA,WACID,EAAAnE,EAAAoE,cAAA,OAAKmB,IAAI,GAAGC,IAAI,uBACfjG,EAAYA,EAAUkG,MAAQ,KAR3C,8CAeAtB,EAAAnE,EAAAoE,cAAAkD,EAAA,GAAKlC,MAAO,CAAEuC,OAAQ,OAAQC,UAAW,MAAOL,WAAY,qCAAsCM,OAAQ,IAElG1D,EAAAnE,EAAAoE,cAAA0D,EAAA,GACInC,KAAM,CACFkC,OAAQ,GACRE,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,IAAK,GAETC,WAAY,CACRC,SAAU,EACVC,MAAO,IAEXC,WAAYnB,EACZoB,WAAY,SAAAC,GAAI,OACZvE,EAAAnE,EAAAoE,cAAA0D,EAAA,EAAMa,KAAN,CAAWjC,IAAKgC,EAAKE,SACjBzE,EAAAnE,EAAAoE,cAAAyE,EAAA,GACIC,UAAU,EACVC,WAAS,EACTC,QAAS,CACL7E,EAAAnE,EAAAoE,cAAA6E,EAAA,GAAQpI,KAAK,QAAb,yCAIJuE,MAAO,CAAEwC,UAAW,QACpBsB,MAAO/E,EAAAnE,EAAAoE,cAAA,OAAKmB,IAAI,UAAUC,IAAKkD,EAAKS,SAEpChF,EAAAnE,EAAAoE,cAAC+C,EAAD,CAAMxC,MAAO+D,EAAKrC,KAAM+C,YAAaV,EAAKU,cAC1CjF,EAAAnE,EAAAoE,cAAA,QAAMkB,UAAU,QAAQF,MAAO,CAAEyB,WAAY,OAAQxB,MAAO,OAAQe,UAAW,SAAUlB,MAAO,SAAWwD,EAAKW,MAAhH,sCAtDjBtC,aAiFRtG,mBAdf,SAA0BuG,GACtB,MAAO,CACHK,OAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,KAAM,GAAI,IAAK,EAAG,EAAG,GAAI,GAAI,EAAG,MAAO,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAGlJ,IAAI,SAACC,EAAEqI,GAAH,MAAU,CAC7GJ,KAAM,oDAAcjI,EACpBgL,YAAa,mDACbC,MAAW,GAAJjL,EACP+K,MAAO,6EACPP,QAAQnC,OAIpB,SAA8BtG,GAC1B,OAAO+G,6BAAmB,GAAI/G,IAEnBM,CAA8C2G,GC9EvD/H,iBAAe,CACjBC,KAAM,GACNgK,cAAc,EAEdC,OAAO,GACPC,gBAAe,EAEfR,QAAS,GACTS,cAAe,EACfC,iBAAiB,EAEjBC,UAAW,KCbAC,GATKC,0BAAiB,CAIjCC,SD6ImB,WAAkC,IAAjC9C,EAAiCzF,UAAAwI,OAAA,QAAAC,IAAAzI,UAAA,GAAAA,UAAA,GAAzBlC,GAAc4K,EAAW1I,UAAAwI,OAAA,EAAAxI,UAAA,QAAAyI,EACrD,OAAQC,EAAOpJ,MACX,IArJc,gBAqJM,OAAO9B,OAAAC,EAAA,EAAAD,CAAA,GAAKiI,EAAZ,CAAmB1H,KAAKP,OAAAC,EAAA,EAAAD,CAAA,GAAKkL,EAAOnJ,WACxD,IArJsB,wBAqJM,OAAO/B,OAAAC,EAAA,EAAAD,CAAA,GAAKiI,EAAZ,CAAmBsC,aAAcW,EAAOnJ,UAEpE,IArJgB,kBAqJM,OAAO/B,OAAAC,EAAA,EAAAD,CAAA,GAAKiI,EAAZ,CAAmBuC,OAAOxK,OAAAmL,EAAA,EAAAnL,CAAKkL,EAAOnJ,WAC5D,IArJwB,0BAqJM,OAAO/B,OAAAC,EAAA,EAAAD,CAAA,GAAKiI,EAAZ,CAAmBwC,eAAgBS,EAAOnJ,UAExE,IAnJiB,mBAmJM,OAAO/B,OAAAC,EAAA,EAAAD,CAAA,GAAKiI,EAAZ,CAAmBgC,QAAQjK,OAAAmL,EAAA,EAAAnL,CAAKkL,EAAOnJ,WAC9D,IAtJuB,yBAuJnB,OAAO/B,OAAAC,EAAA,EAAAD,CAAA,GACAiI,EADP,CACcgC,QAAShC,EAAMgC,QAAQ7K,IAAI,SAAAgM,GAAG,OACpCA,EAAIC,yBAA2BH,EAAOnJ,QAAQsJ,uBAA9CrL,OAAAC,EAAA,EAAAD,CAAA,GACSoL,EADT,CACcE,WAAYJ,EAAOnJ,QAAQuJ,aAErCF,MAIhB,IA/JuB,iBA+JM,OAAOpL,OAAAC,EAAA,EAAAD,CAAA,GAAKiI,EAAZ,CAAmByC,cAAeQ,EAAOnJ,UACtE,IA9JyB,2BA8JM,OAAO/B,OAAAC,EAAA,EAAAD,CAAA,GAAKiI,EAAZ,CAAmB0C,gBAAiBO,EAAOnJ,UAE1E,IA9JwB,0BA8JM,OAAO/B,OAAAC,EAAA,EAAAD,CAAA,GAAKiI,EAAZ,CAAmB2C,UAAWM,EAAOnJ,UACnE,QACI,OAAOkG,ICpKfC,SJ4FmB,WAAkC,IAAjCD,EAAiCzF,UAAAwI,OAAA,QAAAC,IAAAzI,UAAA,GAAAA,UAAA,GAAzBlC,EAAc4K,EAAW1I,UAAAwI,OAAA,EAAAxI,UAAA,QAAAyI,EACrD,OAAQC,EAAOpJ,MACX,IAnGY,cAmGM,OAAO9B,OAAAC,EAAA,EAAAD,CAAA,GAAKiI,EAAZ,CAAmBxH,MAAOyK,EAAOnJ,UACnD,IAnGU,YAmGM,OAAO/B,OAAAC,EAAA,EAAAD,CAAA,GAAKiI,EAAZ,CAAmBvH,UAAUV,OAAAmL,EAAA,EAAAnL,CAAMkL,EAAOnJ,WAC1D,IAlGgB,kBAkGM,OAAO/B,OAAAC,EAAA,EAAAD,CAAA,GAAKiI,EAAZ,CAAmBtH,gBAAiBuK,EAAOnJ,UACjE,IApGkB,oBAoGM,OAAO/B,OAAAC,EAAA,EAAAD,CAAA,GAAKiI,EAAZ,CAAmBrH,kBAAmBsK,EAAOnJ,UACrE,IAnGW,aAmGM,OAAO/B,OAAAC,EAAA,EAAAD,CAAA,GAAKiI,EAAZ,CAAmBzH,UAAW0K,EAAOnJ,UACtD,IAnGK,OAmGM,OAAO/B,OAAAC,EAAA,EAAAD,CAAA,GAAKiI,EAAZ,CAAmB1H,KAAM2K,EAAOnJ,UAC3C,QACI,OAAOkG,0BKpGbsD,GAAQC,sBAAYX,GAAaY,+BAAoBC,0BAAgBC,QAwB5DC,eAtBd,SAAAA,EAAY1G,GAAO,IAAA2G,EAAA,OAAA7L,OAAA8L,EAAA,EAAA9L,CAAAuC,KAAAqJ,IAClBC,EAAA7L,OAAA+L,EAAA,EAAA/L,CAAAuC,KAAAvC,OAAAgM,EAAA,EAAAhM,CAAA4L,GAAAK,KAAA1J,KAAM2C,KAED+C,MAAQ,CACZiE,YAAa,OACbC,YAAa,MALIN,wEASZ,OACLzG,EAAAnE,EAAAoE,cAAC+G,EAAA,EAAD,KACChH,EAAAnE,EAAAoE,cAACgH,EAAA,EAAD,CAAUd,MAAOA,IACDnG,EAAAnE,EAAAoE,cAACiH,EAAA,EAAD,KACIlH,EAAAnE,EAAAoE,cAACiH,EAAA,EAAD,CAAOC,KAAK,QAAQC,UAAWnE,KACjDjD,EAAAnE,EAAAoE,cAACiH,EAAA,EAAD,CAAOC,KAAK,IAAIC,UAAWxH,cAffyH,IAAMzE,WCHxBtG,IAAQkB,KAAK,eAAgB,IAQ7B8J,IAASC,OAAOvH,EAAAnE,EAAAoE,cAACuH,GAAD,MAAQC,SAASC,eAAe","file":"static/js/main.90049281.chunk.js","sourcesContent":["export const getParamsUrl = (param) => {\r\n\tvar obj = {};\r\n\twindow.location.search\r\n\t\t.replace(\"?\",\"\")\r\n\t\t.split(\"&\")\r\n\t\t.map(s=>s.split(\"=\"))\r\n\t\t.forEach((o)=>obj[o[0]] = o[1]);\r\n\treturn obj[param];\r\n} \r\nexport const host = \"https://vkmacro.ru/api\";\r\n//export const host = \"http://localhost:5000/api\";\r\n//export const host = \"/api\";\r\n","import axios from 'axios';\r\nimport Cookies from 'universal-cookie';\r\nconst cookies = new Cookies();\r\n\r\nexport default {\r\n\tget:(url,params) => {\r\n\t\tlet token = cookies.get('token');\r\n        params.params = { ...params.params };\r\n        axios.defaults.headers.common['Authorization'] = \"Bearer \" + token;\r\n\t\treturn axios.get(url, params);\r\n\t},\r\n\tpost:(url,params) => {\r\n        let token = cookies.get('token');\r\n        axios.defaults.headers.common['Authorization'] = \"Bearer \" + token;\r\n\t\tparams={...params};\r\n\t\treturn axios.post(url, params);\r\n\t}\r\n}\r\n","\r\nimport axios from '../actions/ajax';\r\n\r\nimport { host } from '../utils';\r\n\r\nimport connect from '@vkontakte/vkui-connect';\r\n\r\n\r\nconst SELECTGROUP = 'SELECTGROUP';\r\nconst FOLLOWERS = 'FOLLOWERS';\r\nconst FOLLOWERS_LOADING = 'FOLLOWERS_LOADING';\r\nconst FOLLOWERS_COUNT = 'FOLLOWERS_COUNT';\r\nconst MYFOLLOWER = 'MYFOLLOWER';\r\nconst USER = 'USER';\r\n\r\nconst initialState = {\r\n    user: {},\r\n    myAccount: null,\r\n    group: {},\r\n    followers: [],\r\n    followers_count: [],\r\n    followers_loading: false\r\n};\n\r\nexport const storeRatePage = {\r\n    regVKApp: () => async (dispatch, getState) => {\r\n        connect.subscribe((e) => {\n            switch (e.detail.type) {\n                case 'VKWebAppGetUserInfoResult':\r\n\t\t\t\t\tdispatch({ type: USER, payload: e.detail.data });\n                    break;\n                default:\n                    console.log(e.detail.type);\n            }\n        });\r\n    },\r\n    vkWebAppGetUserInfo: () => async (dispatch, getState) => {\r\n        connect.send('VKWebAppGetUserInfo', {});\r\n    },\r\n    getFollowers: (groupId,sorter) => async (dispatch, getState) => {\r\n        if (!(groupId != null && groupId > 0)) {\r\n            dispatch({ type: FOLLOWERS_COUNT, payload: 0 });\r\n            dispatch({ type: FOLLOWERS, payload: [] });\r\n            return;\r\n        }\r\n        dispatch({ type: FOLLOWERS_LOADING, payload: true });\r\n        axios.get(host + \"/followers/GetFollowersFilterV2\", {\r\n            params: {\r\n                groupId,\r\n                sorter\r\n            }\r\n        })\r\n        .then((result) => {\r\n            result = result.data;\r\n            if (result.isSuccess) {\r\n                dispatch({ type: FOLLOWERS_COUNT, payload: result.object.count });\r\n                dispatch({ type: FOLLOWERS, payload: result.object.items });\r\n                dispatch({ type: FOLLOWERS_LOADING, payload: false });\r\n            }\r\n        });\r\n        \r\n    }, getFollowerById: (groupId, followerId) => async (dispatch, getState) => {\r\n        if (!followerId) return;\r\n        axios.get(host + \"/followers/GetFollowersFilterV2\", {\r\n            params: {\r\n                groupId,\r\n                followerId\r\n            }\r\n        })\r\n            .then((result) => {\r\n                result = result.data;\r\n                if (result.isSuccess) {\r\n                    if (result.object.count > 0) {\r\n                        dispatch({ type: MYFOLLOWER, payload: result.object.items[0] });\r\n                    }\r\n                } else {\r\n                    dispatch({ type: MYFOLLOWER, payload: null});\r\n                }\r\n            });\r\n\r\n    },\r\n    getGroupById: (socialId) => async (dispatch, getState) => {\r\n\r\n        axios.get(host + \"/group/GetGroupById\", {\r\n            params: {\r\n                socialId\r\n            }\r\n        })\r\n            .then((result) => {\r\n                result = result.data;\r\n                if (result.isSuccess) {\r\n                    dispatch({ type: SELECTGROUP, payload: result.object });\r\n                } else {\r\n                    dispatch({ type: SELECTGROUP, payload: null });\r\n                }\r\n\r\n            }).catch((e) => {\r\n                console.log(e);\r\n                dispatch({ type: SELECTGROUP, payload: null });\r\n            });\r\n\r\n    }\r\n    \r\n};\r\n\r\nexport const reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SELECTGROUP: return { ...state, group: action.payload};\r\n        case FOLLOWERS: return { ...state, followers: [ ...action.payload]};\r\n        case FOLLOWERS_COUNT: return { ...state, followers_count: action.payload};\r\n        case FOLLOWERS_LOADING: return { ...state, followers_loading: action.payload};\r\n        case MYFOLLOWER: return { ...state, myAccount: action.payload};\r\n        case USER: return { ...state, user: action.payload};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import React, { Component } from 'react';\r\n\r\nimport {bindActionCreators} from  'redux';\r\nimport {connect} from 'react-redux';\r\n\r\nimport { getParamsUrl } from '../utils';\r\n\r\nimport \"./WebPage.less\";\r\nimport { storeRatePage } from \"../store/RatePage\";\r\nimport { NavBar, Card, WhiteSpace, Grid} from 'antd-mobile';\r\n\r\nconst { getFollowers, getGroupById, getFollowerById, regVKApp, vkWebAppGetUserInfo } = storeRatePage;\r\n\r\nconst likeUrl = \"./images/filled-like.png\";\r\nconst commentUrl = \"./images/filled-topic.png\";\r\nconst repostUrl = \"./images/undo.png\";\r\nconst coinsUrl = \"./images/coins.png\";\r\n\r\nclass WebPage extends Component{\r\n    componentDidMount() {\r\n        var groupId = getParamsUrl(\"vk_group_id\");\n        var userId = getParamsUrl(\"vk_user_id\");\r\n\r\n        this.props.regVKApp();\r\n        this.props.vkWebAppGetUserInfo();\r\n        this.props.getFollowers(groupId);\r\n        this.props.getGroupById(groupId);\r\n        this.props.getFollowerById(groupId, userId);\r\n    }\r\n    render() {\r\n        const { followers, group, myAccount,user } = this.props;\r\n        return (\r\n            <div>\r\n                <NavBar\r\n                    mode=\"dark\"\r\n                >\r\n                    Рейтинг\r\n                </NavBar>\r\n                {\r\n                    group ?\r\n                        <div>\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tuser.first_name &&\r\n\t\t\t\t\t\t\t\t<Card full>\r\n\t\t\t\t\t\t\t\t\t<Card.Header\r\n\t\t\t\t\t\t\t\t\t\ttitle={`${user.first_name} ${user.last_name}`}\r\n\t\t\t\t\t\t\t\t\t\tthumb={`${user.photo_100}`}\r\n\t\t\t\t\t\t\t\t\t\tthumbStyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\"border-radius\": \"50%\",\r\n\t\t\t\t\t\t\t\t\t\t\t\"width\": \"50px\"\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\textra={\r\n\t\t\t\t\t\t\t\t\t\t\t<div style={{ \"float\": \"right\" }} className=\"am-card-header-content\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<img alt=\"\" src={coinsUrl} />\r\n                                                {myAccount?myAccount.balls:0}\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<Card.Body>\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\tmyAccount ?\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Grid className={\"rate\"} columnNum={4} data={[\r\n                                                    {\r\n                                                        text: myAccount.num,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}, {\r\n                                                        icon: likeUrl,\r\n                                                        text: myAccount.likes,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}, {\r\n                                                        icon: commentUrl,\r\n                                                        text: myAccount.comments,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}, {\r\n                                                        icon: repostUrl,\r\n                                                        text: myAccount.reposts,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t]} activeStyle={false} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t: <h3 style={{ textAlign: \"center\" }}>Нет активных действий</h3>\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t</Card.Body>\r\n\t\t\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t\t\t}\r\n                            <h2 style={{ textAlign: \"center\" }}>Группа</h2>\r\n                            <Card full>\r\n                                <Card.Header\r\n                                    title={group.name}\r\n                                    thumb={group.photo100}\r\n                                    thumbStyle={{\r\n                                        borderRadius: \"50%\"\r\n                                    }}\r\n                                    extra={\r\n                                        <div style={{ \"float\": \"right\" }} className=\"am-card-header-content\">\r\n              \r\n                                        </div>\r\n                                    }\r\n                                />\r\n                            </Card>\r\n                            <h2 style={{ textAlign: \"center\" }}>Рейтинг подписчиков</h2>\r\n                            {\r\n                                followers.map((f, i) => <div key={f.followerId}>\r\n                                    <WhiteSpace size=\"sm\" />\r\n                                    <Card full>\r\n                                        <Card.Header\r\n                                            title={f.name}\r\n                                            thumb={f.photo100}\r\n                                            thumbStyle={{\r\n                                                borderRadius: \"50%\",\r\n                                                \"width\": \"50px\"\r\n                                            }}\r\n                                            extra={\r\n                                                <div style={{ \"float\": \"right\" }} className=\"am-card-header-content\">\r\n                                                    <img alt=\"\" src={coinsUrl} />\r\n                                                    {f.balls}\r\n                                                </div>\r\n                                            }\r\n                                        />\r\n                                        <Card.Body>\r\n                                            <Grid className={\"rate\"} columnNum={4} data={[\r\n                                                {\r\n                                                    text: f.num,\r\n                                                }, {\r\n                                                    icon: likeUrl,\r\n                                                    text: f.likes,\r\n                                                }, {\r\n                                                    icon: commentUrl,\r\n                                                    text: f.comments,\r\n                                                }, {\r\n                                                    icon: repostUrl,\r\n                                                    text: f.reposts,\r\n                                                },\r\n                                            ]} activeStyle={false} />\r\n                                        </Card.Body>\r\n                                    </Card>\r\n                                </div>\r\n                                )\r\n                            }\r\n                        </div> : <h1 style={{ paddingTop: 200, \"text-align\": \"center\" }}>\n                            Нет информации о данной группе\n                        </h1>\r\n                    }\r\n            </div>\r\n        );\r\n\t}\r\n};\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        followers:state.ratePage.followers,\r\n        group: state.ratePage.group,\r\n        myAccount: state.ratePage.myAccount,\r\n        user: state.ratePage.user\r\n    };\r\n}\r\nfunction matchDispatchToProps(dispatch){ \r\n    return bindActionCreators({ getFollowers, getGroupById, getFollowerById, regVKApp, vkWebAppGetUserInfo },dispatch);\r\n}\r\nexport default connect(mapStateToProps,matchDispatchToProps)(WebPage);\r\n","import React, { Component } from 'react';\r\n\r\nimport {bindActionCreators} from  'redux';\r\nimport {connect} from 'react-redux';\r\n\r\nimport { getParamsUrl } from '../utils';\r\n\r\nimport \"./ShopPage.less\";\r\nimport { storeRatePage } from \"../store/RatePage\";\r\nimport { NavBar, WhiteSpace, Grid } from 'antd-mobile';\r\nimport { Col, Icon, Avatar,Card, List,Row, Button } from 'antd';\r\n\r\nconst { Meta } = Card;\r\n\r\nconst { getFollowers, getGroupById, getFollowerById, regVKApp, vkWebAppGetUserInfo } = storeRatePage;\r\n\r\nclass ShopPage extends Component{\r\n    componentDidMount() {\r\n\r\n    }\r\n    render() {\r\n        const { myAccount, tovars } = this.props;\r\n        return (\r\n            <Row style={{ background: \"linear-gradient(45deg, red, blue)\" }} className=\"shop\">\r\n                <NavBar\r\n                    mode=\"dark\"\r\n                    leftContent={[\r\n                        <Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />\r\n                    ]}\r\n                    rightContent={[\r\n                        <div>\r\n                            <img alt=\"\" src=\"./images/coins.png\" />\r\n                            {myAccount ? myAccount.balls : 0}\r\n                        </div>\r\n                    ]}\r\n                >\r\n                    \r\n                    Магазин\r\n                </NavBar>\r\n                <Row style={{ margin: \"40px\", marginTop: \"0px\", background: \"linear-gradient(45deg, red, blue)\"}} gutter={32}>\r\n                    {\r\n                        <List\r\n                            grid={{\r\n                                gutter: 16,\r\n                                xs: 1,\r\n                                sm: 2,\r\n                                md: 2,\r\n                                lg: 3,\r\n                                xl: 3,\r\n                                xxl: 3,\r\n                            }}\r\n                            pagination={{\r\n                                pageSize: 6,\r\n                                total: 24,\r\n                            }}\r\n                            dataSource={tovars}\r\n                            renderItem={item => (\r\n                                <List.Item key={item.tovarId}>\r\n                                    <Card\r\n                                        bordered={false}\r\n                                        hoverable\r\n                                        actions={[\r\n                                            <Button type=\"link\">\r\n                                                Купить\r\n                                            </Button>\r\n                                        ]}\r\n                                        style={{ marginTop: \"20px\" }}\r\n                                        cover={<img alt=\"example\" src={item.photo} />}\r\n                                    >\r\n                                        <Meta title={item.name} description={item.description} />\r\n                                        <span className=\"price\" style={{ paddingTop: \"10px\", float: \"left\", textAlign: \"center\", width: \"100%\" }}>{item.price} руб.</span>\r\n                                    </Card>\r\n                                </List.Item>\r\n                            )}\r\n                        />\r\n                    }\r\n                </Row>\r\n                \r\n            </Row>\r\n            \r\n        );\r\n\t}\r\n};\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        tovars: [1, 2, 3, 4, 5, 6, 7, 4214, 21, 421, 4, 2, 32, 32, 3, 24231, 32, 13, 2, 13, 21, 32, 13, 2].map((s,i) => ({\r\n            name: \"Название \" + s,\r\n            description: \"Описание\",\r\n            price: s * 60,\r\n            photo: \"https://www.argnord.ru/pictures/actions/mega-sale-letnyaya-kollektsiya.jpg\",\r\n            tovarId:i\r\n        }))\r\n    };\r\n}\r\nfunction matchDispatchToProps(dispatch){ \r\n    return bindActionCreators({ },dispatch);\r\n}\r\nexport default connect(mapStateToProps,matchDispatchToProps)(ShopPage);\r\n","import { message } from 'antd';\r\nimport axios from '../actions/ajax';\r\n\r\nimport { host } from '../utils';\r\n\r\n\r\nconst USERPAGE_USER = 'USERPAGE_USER';\r\nconst USERPAGE_USER_LOADING = 'USERPAGE_USER_LOADING';\r\n\r\nconst USERPAGE_GROUPS = 'USERPAGE_GROUPS';\r\nconst USERPAGE_GROUPS_LOADING = 'USERPAGE_GROUPS_LOADING';\r\n\r\nconst USERPAGE_ACTION_UPDATE = 'USERPAGE_ACTION_UPDATE';\r\nconst USERPAGE_ACTIONS_COUNT = 'USERPAGE_COUNT';\r\nconst USERPAGE_ACTIONS = 'USERPAGE_ACTIONS';\r\nconst USERPAGE_ACTIONS_LOADING = 'USERPAGE_ACTIONS_LOADING';\r\n\r\nconst USERPAGE_USER_STATISTIC = 'USERPAGE_USER_STATISTIC';\r\n\r\nconst initialState = {\r\n    user: {},\r\n    user_loading: false,\r\n\r\n    groups:[],\r\n    groups_loading:false,\r\n\r\n    actions: [],\r\n    actions_count: 0,\r\n    actions_loading: false,\r\n\r\n    statistic: [],\r\n};\r\nexport const storeUserPage = {\r\n    getUser: (followerId) => async (dispatch, getState) => {\r\n        dispatch({ type: USERPAGE_USER_LOADING, payload: true });\r\n        axios.get(host + \"/followers/GetFollowersFilter\", {\r\n            params: {\r\n                followerId\r\n            }\r\n        })\r\n        .then((result) => {\r\n            result = result.data;\r\n            dispatch({ type: USERPAGE_USER_LOADING, payload: false });\r\n            if (result.isSuccess) {\r\n                dispatch({ type: USERPAGE_USER, payload: result.object.items[0] });\r\n            } else {\r\n                message.error(\"��� �� ����� �� ���. ������������� ��������\");\r\n                dispatch({ type: USERPAGE_USER, payload:[]});\r\n            }\r\n        })\r\n        .catch(() => {\r\n            message.error(\"��� �� ����� �� ���. ������������� ��������\");\r\n            dispatch({ type: USERPAGE_USER_LOADING, payload: false });\r\n            dispatch({ type: USERPAGE_USER, payload: [] });\r\n        });\r\n    },\r\n    getGroupsByFollower: (followerId) => async (dispatch, getState) => {\r\n        dispatch({ type: USERPAGE_GROUPS_LOADING, payload: true });\r\n        axios.get(host + \"/group/GetGroupsFilterV2\", {\r\n            params: {\r\n                followerId\r\n            }\r\n        })\r\n        .then((result) => {\r\n            result = result.data;\r\n            dispatch({ type: USERPAGE_GROUPS_LOADING, payload: false });\r\n            if (result.isSuccess) {\r\n                dispatch({ type: USERPAGE_GROUPS, payload: result.object});\r\n            }\r\n        })\r\n        .catch(() => {\r\n            message.error(\"��� �� ����� �� ���. ������������� ��������\");\r\n            dispatch({ type: USERPAGE_GROUPS_LOADING, payload: false });\r\n            dispatch({ type: USERPAGE_GROUPS, payload: [] });\r\n        });\r\n    },\r\n    changeBalls: (followersGroupActionId, isAddBalls) => async (dispatch, getState) => {\r\n        dispatch({ type: USERPAGE_ACTIONS_LOADING, payload: true });\r\n        axios.post(host + \"/followers/ChangeBalls\", {\r\n            followersGroupActionId,\r\n            isAddBalls\r\n        })\r\n            .then((result) => {\r\n                result = result.data;\r\n                dispatch({ type: USERPAGE_ACTIONS_LOADING, payload: false });\r\n                if (result.isSuccess) {\r\n                    dispatch({ type: USERPAGE_ACTION_UPDATE, payload: { followersGroupActionId, isAddBalls } });\r\n                }\r\n            })\r\n            .catch(() => {\r\n                message.error(\"��� �� ����� �� ���. ������������� ��������\");\r\n                dispatch({ type: USERPAGE_ACTIONS_LOADING, payload: false });\r\n            });\r\n    },\r\n    getActionsStatistic: (followerId, groupId) => async (dispatch, getState) => {\r\n        axios.get(host + \"/followers/getActionsStatistic\", {\r\n            params: {\r\n                followerId,\r\n                groupId,\r\n            }\r\n        })\r\n            .then((result) => {\r\n                result = result.data;\r\n                if (result.isSuccess) {\r\n                    dispatch({ type: USERPAGE_USER_STATISTIC, payload: result.object });\r\n                }\r\n            })\r\n            .catch(() => {\r\n                message.error(\"��� �� ����� �� ���. ������������� ��������\");\r\n            });\r\n    },\r\n    changeBallsFollower: (followerId, groupId) => async (dispatch, getState) => {\r\n        axios.post(host + \"/followers/ChangeBallsByUser\", {\r\n                followerId,\r\n                groupId,\r\n        })\r\n            .then((result) => {\r\n                result = result.data;\r\n                if (result.isSuccess) {\r\n                    dispatch({ type: USERPAGE_ACTIONS, payload: [] });\r\n                    dispatch({ type: USERPAGE_USER_STATISTIC, payload: { likes: 0, comments: 0, reposts: 0 } });\r\n                }\r\n            })\r\n            .catch(() => {\r\n                message.error(\"��� �� ����� �� ���. ������������� ��������\");\r\n            });\r\n    },\r\n    getFollowerActionsFilter: (followerId, groupId,sorter) => async (dispatch, getState) => {\r\n        dispatch({ type: USERPAGE_ACTIONS_LOADING, payload: true });\r\n        axios.get(host + \"/followers/GetFollowerActionsFilter\", {\r\n            params: {\r\n                followerId,\r\n                groupId,\r\n                sorter\r\n            }\r\n        })\r\n        .then((result) => {\r\n            result = result.data;\r\n            dispatch({ type: USERPAGE_ACTIONS_LOADING, payload: false });\r\n            if (result.isSuccess) {\r\n                dispatch({ type: USERPAGE_ACTIONS_COUNT, payload: result.object.count });\r\n                dispatch({ type: USERPAGE_ACTIONS, payload: result.object.items });\r\n            }\r\n        })\r\n        .catch(() => {\r\n            message.error(\"��� �� ����� �� ���. ������������� ��������\");\r\n            dispatch({ type: USERPAGE_ACTIONS_LOADING, payload: false });\r\n            dispatch({ type: USERPAGE_ACTIONS_COUNT, payload: 0 });\r\n            dispatch({ type: USERPAGE_ACTIONS, payload: [] });\r\n        });\r\n    }\r\n};\r\n\r\nexport const reducer = (state = initialState, action) => {\r\n    switch (action.type) {\n        case USERPAGE_USER: return { ...state, user: {...action.payload}};\n        case USERPAGE_USER_LOADING: return { ...state, user_loading: action.payload };\n\n        case USERPAGE_GROUPS: return { ...state, groups: [...action.payload] };\n        case USERPAGE_GROUPS_LOADING: return { ...state, groups_loading: action.payload };\n\n        case USERPAGE_ACTIONS: return { ...state, actions: [...action.payload] };\n        case USERPAGE_ACTION_UPDATE: {\r\n            return {\r\n                ...state, actions: state.actions.map(act =>\n                    act.followersGroupActionId === action.payload.followersGroupActionId ?\r\n                        { ...act, isAddBalls: action.payload.isAddBalls }\r\n                        :\r\n                        act\r\n                )\r\n            };\n        }\n        case USERPAGE_ACTIONS_COUNT: return { ...state, actions_count: action.payload};\n        case USERPAGE_ACTIONS_LOADING: return { ...state, actions_loading: action.payload };\n\n        case USERPAGE_USER_STATISTIC: return { ...state, statistic: action.payload};\n        default:\n            return state;\n    }\r\n};\r\n","import {combineReducers} from 'redux';\r\n\r\n//import * as Groups from '../store/Groups';\r\n//import * as Followers from '../store/Followers';\r\n//import * as Auth from '../store/Auth';\r\nimport * as UserPage from '../store/UserPage';\r\nimport * as RatePage from '../store/RatePage';\r\n\r\nconst allReducers = combineReducers ({\r\n   // groups: Groups.reducer,\r\n   // followers: Followers.reducer,\r\n    //auth: Auth.reducer,\r\n    userPage: UserPage.reducer,\r\n    ratePage: RatePage.reducer,\r\n\t\r\n});\r\n\r\nexport default allReducers;\r\n","import React from 'react';\n\nimport { BrowserRouter,Switch,Route } from 'react-router-dom'; \n\nimport WebPage from './routes/WebPage';\nimport ShopPage from './routes/ShopPage';\n \r\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport allReducers from './store';\n\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\n\nconst store = createStore(allReducers, composeWithDevTools(applyMiddleware(thunk)));\nclass App extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tactivePanel: 'home',\n\t\t\tfetchedUser: null,\n\t\t};\n\t}\n\trender() {\n        return (\n\t\t\t<BrowserRouter>\n\t\t\t\t<Provider store={store}>\n                    <Switch>\n                        <Route path='/shop' component={ShopPage} />\n\t\t\t\t\t\t<Route path='/' component={WebPage}/>\n                        \n\t\t\t\t\t</Switch>\n\t\t\t\t</Provider>\n\t\t\t</BrowserRouter>\n\t\t);\n\t}\n}\nexport default App;\n","import 'core-js/es6/map';\nimport 'core-js/es6/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom'; \nimport connect from '@vkontakte/vkui-connect';\nimport App from './App';\n\n\n\n// import registerServiceWorker from './sw';\n\n// Init VK App\nconnect.send('VKWebAppInit', {});\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT \n// registerServiceWorker();\n\nReactDOM.render(<App/>, document.getElementById('root'));\n"],"sourceRoot":""}