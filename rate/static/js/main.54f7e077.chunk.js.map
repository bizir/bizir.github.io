{"version":3,"sources":["js/routes/WebPage.less","index.less","js/actions/ajax.js","js/utils/index.js","js/store/UserPage.js","js/store/RatePage.js","js/store/index.js","js/routes/WebPage.js","js/index.js","registerServiceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","cookies","Cookies","ajax","url","params","token","get","Object","objectSpread","axios","defaults","headers","common","getParamsUrl","param","obj","window","location","search","replace","split","map","s","forEach","o","host","initialState","user","user_loading","groups","groups_loading","actions","actions_count","actions_loading","statistic","myAccount","group","followers","followers_count","followers_loading","storeRatePage","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","getState","wrap","_context","prev","next","connect","subscribe","e","detail","type","_this","setState","fetchedUser","data","console","log","stop","_x","_x2","apply","this","arguments","_ref2","_callee2","_context2","send","_x3","_x4","groupId","sorter","_ref3","_callee3","_context3","payload","abrupt","then","result","isSuccess","object","count","items","_x5","_x6","followerId","_ref4","_callee4","_context4","_x7","_x8","socialId","_ref5","_callee5","_context5","catch","_x9","_x10","allReducers","combineReducers","userPage","state","length","undefined","action","toConsumableArray","act","followersGroupActionId","isAddBalls","ratePage","getFollowers","getGroupById","getFollowerById","regVKApp","vkWebAppGetUserInfo","WebPage","userId","props","_this$props","react_default","createElement","antd_mobile_es","mode","style","textAlign","full","Header","title","thumb","thumbStyle","border-radius","width","extra","float","class","src","Body","className","columnNum","text","icon","activeStyle","name","photo100","f","i","size","balls","num","likes","comments","reposts","paddingTop","text-align","Component","bindActionCreators","store","createStore","composeWithDevTools","applyMiddleware","thunk","App","react_router_dom","es","react_router","exact","path","component","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","error","ReactDOM","render","js","document","getElementById","URL","process","origin","addEventListener","concat","fetch","response","status","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.54f7e077.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/WebPage.4652b705.less\";","module.exports = __webpack_public_path__ + \"static/media/index.4e88bcd1.less\";","import axios from 'axios';\r\nimport Cookies from 'universal-cookie';\r\nconst cookies = new Cookies();\r\n\r\nexport default {\r\n\tget:(url,params) => {\r\n\t\tlet token = cookies.get('token');\r\n        params.params = { ...params.params };\r\n        axios.defaults.headers.common['Authorization'] = \"Bearer \" + token;\r\n\t\treturn axios.get(url, params);\r\n\t},\r\n\tpost:(url,params) => {\r\n        let token = cookies.get('token');\r\n        axios.defaults.headers.common['Authorization'] = \"Bearer \" + token;\r\n\t\tparams={...params};\r\n\t\treturn axios.post(url, params);\r\n\t}\r\n}\r\n","export const getParamsUrl = (param) => {\r\n\tvar obj = {};\r\n\twindow.location.search\r\n\t\t.replace(\"?\",\"\")\r\n\t\t.split(\"&\")\r\n\t\t.map(s=>s.split(\"=\"))\r\n\t\t.forEach((o)=>obj[o[0]] = o[1]);\r\n\treturn obj[param];\r\n} \r\nexport const host = \"https://vkmacro.ru/api\";\r\n","import { message } from 'antd';\r\nimport axios from '../actions/ajax';\r\n\r\nimport { host } from '../utils';\r\n\r\nimport { setInterval } from 'core-js';\r\n\r\n\r\n\r\nconst USERPAGE_USER = 'USERPAGE_USER';\r\nconst USERPAGE_USER_LOADING = 'USERPAGE_USER_LOADING';\r\n\r\nconst USERPAGE_GROUPS = 'USERPAGE_GROUPS';\r\nconst USERPAGE_GROUPS_LOADING = 'USERPAGE_GROUPS_LOADING';\r\n\r\nconst USERPAGE_ACTION_UPDATE = 'USERPAGE_ACTION_UPDATE';\r\nconst USERPAGE_ACTIONS_COUNT = 'USERPAGE_COUNT';\r\nconst USERPAGE_ACTIONS = 'USERPAGE_ACTIONS';\r\nconst USERPAGE_ACTIONS_LOADING = 'USERPAGE_ACTIONS_LOADING';\r\n\r\nconst USERPAGE_USER_STATISTIC = 'USERPAGE_USER_STATISTIC';\r\n\r\nconst initialState = {\r\n    user: {},\r\n    user_loading: false,\r\n\r\n    groups:[],\r\n    groups_loading:false,\r\n\r\n    actions: [],\r\n    actions_count: 0,\r\n    actions_loading: false,\r\n\r\n    statistic: [],\r\n};\r\nexport const storeUserPage = {\r\n    getUser: (followerId) => async (dispatch, getState) => {\r\n        dispatch({ type: USERPAGE_USER_LOADING, payload: true });\r\n        axios.get(host + \"/followers/GetFollowersFilter\", {\r\n            params: {\r\n                followerId\r\n            }\r\n        })\r\n        .then((result) => {\r\n            result = result.data;\r\n            dispatch({ type: USERPAGE_USER_LOADING, payload: false });\r\n            if (result.isSuccess) {\r\n                dispatch({ type: USERPAGE_USER, payload: result.object.items[0] });\r\n            } else {\r\n                message.error(\"��� �� ����� �� ���. ������������� ��������\");\r\n                dispatch({ type: USERPAGE_USER, payload:[]});\r\n            }\r\n        })\r\n        .catch(() => {\r\n            message.error(\"��� �� ����� �� ���. ������������� ��������\");\r\n            dispatch({ type: USERPAGE_USER_LOADING, payload: false });\r\n            dispatch({ type: USERPAGE_USER, payload: [] });\r\n        });\r\n    },\r\n    getGroupsByFollower: (followerId) => async (dispatch, getState) => {\r\n        dispatch({ type: USERPAGE_GROUPS_LOADING, payload: true });\r\n        axios.get(host + \"/group/GetGroupsFilterV2\", {\r\n            params: {\r\n                followerId\r\n            }\r\n        })\r\n        .then((result) => {\r\n            result = result.data;\r\n            dispatch({ type: USERPAGE_GROUPS_LOADING, payload: false });\r\n            if (result.isSuccess) {\r\n                dispatch({ type: USERPAGE_GROUPS, payload: result.object});\r\n            }\r\n        })\r\n        .catch(() => {\r\n            message.error(\"��� �� ����� �� ���. ������������� ��������\");\r\n            dispatch({ type: USERPAGE_GROUPS_LOADING, payload: false });\r\n            dispatch({ type: USERPAGE_GROUPS, payload: [] });\r\n        });\r\n    },\r\n    changeBalls: (followersGroupActionId, isAddBalls) => async (dispatch, getState) => {\r\n        dispatch({ type: USERPAGE_ACTIONS_LOADING, payload: true });\r\n        axios.post(host + \"/followers/ChangeBalls\", {\r\n            followersGroupActionId,\r\n            isAddBalls\r\n        })\r\n            .then((result) => {\r\n                result = result.data;\r\n                dispatch({ type: USERPAGE_ACTIONS_LOADING, payload: false });\r\n                if (result.isSuccess) {\r\n                    dispatch({ type: USERPAGE_ACTION_UPDATE, payload: { followersGroupActionId, isAddBalls } });\r\n                }\r\n            })\r\n            .catch(() => {\r\n                message.error(\"��� �� ����� �� ���. ������������� ��������\");\r\n                dispatch({ type: USERPAGE_ACTIONS_LOADING, payload: false });\r\n            });\r\n    },\r\n    getActionsStatistic: (followerId, groupId) => async (dispatch, getState) => {\r\n        axios.get(host + \"/followers/getActionsStatistic\", {\r\n            params: {\r\n                followerId,\r\n                groupId,\r\n            }\r\n        })\r\n            .then((result) => {\r\n                result = result.data;\r\n                if (result.isSuccess) {\r\n                    dispatch({ type: USERPAGE_USER_STATISTIC, payload: result.object });\r\n                }\r\n            })\r\n            .catch(() => {\r\n                message.error(\"��� �� ����� �� ���. ������������� ��������\");\r\n            });\r\n    },\r\n    changeBallsFollower: (followerId, groupId) => async (dispatch, getState) => {\r\n        axios.post(host + \"/followers/ChangeBallsByUser\", {\r\n                followerId,\r\n                groupId,\r\n        })\r\n            .then((result) => {\r\n                result = result.data;\r\n                if (result.isSuccess) {\r\n                    dispatch({ type: USERPAGE_ACTIONS, payload: [] });\r\n                    dispatch({ type: USERPAGE_USER_STATISTIC, payload: { likes: 0, comments: 0, reposts: 0 } });\r\n                }\r\n            })\r\n            .catch(() => {\r\n                message.error(\"��� �� ����� �� ���. ������������� ��������\");\r\n            });\r\n    },\r\n    getFollowerActionsFilter: (followerId, groupId,sorter) => async (dispatch, getState) => {\r\n        dispatch({ type: USERPAGE_ACTIONS_LOADING, payload: true });\r\n        axios.get(host + \"/followers/GetFollowerActionsFilter\", {\r\n            params: {\r\n                followerId,\r\n                groupId,\r\n                sorter\r\n            }\r\n        })\r\n        .then((result) => {\r\n            result = result.data;\r\n            dispatch({ type: USERPAGE_ACTIONS_LOADING, payload: false });\r\n            if (result.isSuccess) {\r\n                dispatch({ type: USERPAGE_ACTIONS_COUNT, payload: result.object.count });\r\n                dispatch({ type: USERPAGE_ACTIONS, payload: result.object.items });\r\n            }\r\n        })\r\n        .catch(() => {\r\n            message.error(\"��� �� ����� �� ���. ������������� ��������\");\r\n            dispatch({ type: USERPAGE_ACTIONS_LOADING, payload: false });\r\n            dispatch({ type: USERPAGE_ACTIONS_COUNT, payload: 0 });\r\n            dispatch({ type: USERPAGE_ACTIONS, payload: [] });\r\n        });\r\n    }\r\n};\r\n\r\nexport const reducer = (state = initialState, action) => {\r\n    switch (action.type) {\n        case USERPAGE_USER: return { ...state, user: {...action.payload}};\n        case USERPAGE_USER_LOADING: return { ...state, user_loading: action.payload };\n\n        case USERPAGE_GROUPS: return { ...state, groups: [...action.payload] };\n        case USERPAGE_GROUPS_LOADING: return { ...state, groups_loading: action.payload };\n\n        case USERPAGE_ACTIONS: return { ...state, actions: [...action.payload] };\n        case USERPAGE_ACTION_UPDATE: {\r\n            return {\r\n                ...state, actions: state.actions.map(act =>\n                    act.followersGroupActionId == action.payload.followersGroupActionId ?\r\n                        { ...act, isAddBalls: action.payload.isAddBalls }\r\n                        :\r\n                        act\r\n                )\r\n            };\n        }\n        case USERPAGE_ACTIONS_COUNT: return { ...state, actions_count: action.payload};\n        case USERPAGE_ACTIONS_LOADING: return { ...state, actions_loading: action.payload };\n\n        case USERPAGE_USER_STATISTIC: return { ...state, statistic: action.payload};\n        default:\n            return state;\n    }\r\n};\r\n","import { message } from 'antd';\r\nimport axios from '../actions/ajax';\r\n\r\nimport { host } from '../utils';\r\n\r\nimport connect from '@vkontakte/vkui-connect';\r\n\r\nimport { setInterval } from 'core-js';\r\n\r\nconst SELECTGROUP = 'SELECTGROUP';\r\nconst FOLLOWERS = 'FOLLOWERS';\r\nconst FOLLOWERS_LOADING = 'FOLLOWERS_LOADING';\r\nconst FOLLOWERS_COUNT = 'FOLLOWERS_COUNT';\r\nconst MYFOLLOWER = 'MYFOLLOWER';\r\n\r\nconst initialState = {\r\n    myAccount: null,\r\n    group: {},\r\n    followers: [],\r\n    followers_count: [],\r\n    followers_loading: false\r\n};\n\r\nexport const storeRatePage = {\r\n    regVKApp: () => async (dispatch, getState) => {\r\n        connect.subscribe((e) => {\n            switch (e.detail.type) {\n                case 'VKWebAppGetUserInfoResult':\n                    this.setState({ fetchedUser: e.detail.data });\n                    break;\n                default:\n                    console.log(e.detail.type);\n            }\n        });\r\n    },\r\n    vkWebAppGetUserInfo: () => async (dispatch, getState) => {\r\n        connect.send('VKWebAppGetUserInfo', {});\r\n    },\r\n    getFollowers: (groupId,sorter) => async (dispatch, getState) => {\r\n        if (!(groupId != null && groupId > 0)) {\r\n            dispatch({ type: FOLLOWERS_COUNT, payload: 0 });\r\n            dispatch({ type: FOLLOWERS, payload: [] });\r\n            return;\r\n        }\r\n        dispatch({ type: FOLLOWERS_LOADING, payload: true });\r\n        axios.get(host + \"/followers/GetFollowersFilter\", {\r\n            params: {\r\n                groupId,\r\n                sorter\r\n            }\r\n        })\r\n        .then((result) => {\r\n            result = result.data;\r\n            if (result.isSuccess) {\r\n                dispatch({ type: FOLLOWERS_COUNT, payload: result.object.count });\r\n                dispatch({ type: FOLLOWERS, payload: result.object.items });\r\n                dispatch({ type: FOLLOWERS_LOADING, payload: false });\r\n            }\r\n        });\r\n        \r\n    }, getFollowerById: (groupId, followerId) => async (dispatch, getState) => {\r\n        if (!followerId) return;\r\n        axios.get(host + \"/followers/GetFollowersFilter\", {\r\n            params: {\r\n                groupId,\r\n                followerId\r\n            }\r\n        })\r\n            .then((result) => {\r\n                result = result.data;\r\n                if (result.isSuccess) {\r\n                    if (result.object.count > 0) {\r\n                        dispatch({ type: MYFOLLOWER, payload: result.object.items[0] });\r\n                    }\r\n                } else {\r\n                    dispatch({ type: MYFOLLOWER, payload: null});\r\n                }\r\n            });\r\n\r\n    },\r\n    getGroupById: (socialId) => async (dispatch, getState) => {\r\n\r\n        axios.get(host + \"/group/GetGroupById\", {\r\n            params: {\r\n                socialId\r\n            }\r\n        })\r\n            .then((result) => {\r\n                result = result.data;\r\n                if (result.isSuccess) {\r\n                    dispatch({ type: SELECTGROUP, payload: result.object });\r\n                } else {\r\n                    dispatch({ type: SELECTGROUP, payload: null });\r\n                }\r\n\r\n            }).catch((e) => {\r\n                console.log(e);\r\n                dispatch({ type: SELECTGROUP, payload: null });\r\n            });\r\n\r\n    }\r\n    \r\n};\r\n\r\nexport const reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SELECTGROUP: return { ...state, group: action.payload};\r\n        case FOLLOWERS: return { ...state, followers: [ ...action.payload]};\r\n        case FOLLOWERS_COUNT: return { ...state, followers_count: action.payload};\r\n        case FOLLOWERS_LOADING: return { ...state, followers_loading: action.payload};\r\n        case MYFOLLOWER: return { ...state, myAccount: action.payload};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import {combineReducers} from 'redux';\r\n\r\n//import * as Groups from '../store/Groups';\r\n//import * as Followers from '../store/Followers';\r\n//import * as Auth from '../store/Auth';\r\nimport * as UserPage from '../store/UserPage';\r\nimport * as RatePage from '../store/RatePage';\r\n\r\nconst allReducers = combineReducers ({\r\n   // groups: Groups.reducer,\r\n   // followers: Followers.reducer,\r\n    //auth: Auth.reducer,\r\n    userPage: UserPage.reducer,\r\n    ratePage: RatePage.reducer,\r\n\t\r\n});\r\n\r\nexport default allReducers;\r\n","import React, { Component } from 'react';\r\n\r\nimport {bindActionCreators} from  'redux';\r\nimport {connect} from 'react-redux';\r\n\r\nimport { getParamsUrl } from '../utils';\r\n\r\nimport \"./WebPage.less\";\r\nimport { storeRatePage } from \"../store/RatePage\";\r\nimport { NavBar, Icon, Card, WhiteSpace, Grid} from 'antd-mobile';\r\n\r\nconst { getFollowers, getGroupById, getFollowerById, regVKApp, vkWebAppGetUserInfo } = storeRatePage;\r\n\r\nclass WebPage extends Component{\r\n    componentDidMount() {\r\n        var groupId = getParamsUrl(\"vk_group_id\");\n        var userId = getParamsUrl(\"vk_user_id\");\r\n\r\n        this.props.regVKApp();\r\n        this.props.vkWebAppGetUserInfo();\r\n        this.props.getFollowers(groupId);\r\n        this.props.getGroupById(groupId);\r\n        this.props.getFollowerById(groupId, userId);\r\n    }\r\n    render() {\r\n        const { followers, group, myAccount } = this.props;\r\n        return (\r\n            <div>\r\n                <NavBar\r\n                    mode=\"dark\"\r\n                >\r\n                    Рейтинг\r\n                </NavBar>\r\n                {\r\n                    group ?\r\n                        <div>\r\n                            <h2 style={{ textAlign: \"center\" }}></h2>\r\n                            <Card full>\r\n                                <Card.Header\r\n                                    title={\"Название\"}\r\n                                    thumb={\"\"}\r\n                                    thumbStyle={{\r\n                                        \"border-radius\": \"50%\",\r\n                                        \"width\": \"50px\"\r\n                                    }}\r\n                                    extra={\r\n                                        <div style={{ \"float\": \"right\" }} class=\"am-card-header-content\">\r\n                                            <img src=\"https://img.icons8.com/color/32/000000/coins.png\" />\r\n                                            {100}\r\n                                        </div>\r\n                                    }\r\n                                />\r\n                                <Card.Body>\r\n                                    {\r\n                                        myAccount ?\r\n                                            <Grid className={\"rate\"} columnNum={4} data={[\r\n                                                {\r\n                                                    text: 101,\r\n                                                }, {\r\n                                                    icon: 'https://img.icons8.com/color/96/000000/filled-like.png',\r\n                                                    text: 0,\r\n                                                }, {\r\n                                                    icon: 'https://img.icons8.com/color/96/000000/filled-topic.png',\r\n                                                    text: 0,\r\n                                                }, {\r\n                                                    icon: 'https://img.icons8.com/color/96/000000/undo.png',\r\n                                                    text: 0,\r\n                                                },\r\n                                            ]} activeStyle={false} />\r\n                                            : <h3 style={{ textAlign: \"center\" }}>Нет активных действий</h3>\r\n                                    }\r\n                                </Card.Body>\r\n                            </Card>\r\n                            <h2 style={{ textAlign: \"center\" }}>Группа</h2>\r\n                            <Card full>\r\n                                <Card.Header\r\n                                    title={group.name}\r\n                                    thumb={group.photo100}\r\n                                    thumbStyle={{\r\n                                        \"border-radius\": \"50%\"\r\n                                    }}\r\n                                    extra={\r\n                                        <div style={{ \"float\": \"right\" }} class=\"am-card-header-content\">\r\n                                            <img src=\"https://img.icons8.com/color/32/000000/coins.png\" />\r\n                                            {100}\r\n                                        </div>\r\n                                    }\r\n                                />\r\n                            </Card>\r\n                            <h2 style={{ textAlign: \"center\" }}>Рейтинг подписчиков</h2>\r\n                            {\r\n                                followers.map((f, i) => <div>\r\n                                    <WhiteSpace size=\"sm\" />\r\n                                    <Card full>\r\n                                        <Card.Header\r\n                                            title={f.name}\r\n                                            thumb={f.photo100}\r\n                                            thumbStyle={{\r\n                                                \"border-radius\": \"50%\",\r\n                                                \"width\": \"50px\"\r\n                                            }}\r\n                                            extra={\r\n                                                <div style={{ \"float\": \"right\" }} class=\"am-card-header-content\">\r\n                                                    <img src=\"https://img.icons8.com/color/32/000000/coins.png\" />\r\n                                                    {f.balls}\r\n                                                </div>\r\n                                            }\r\n                                        />\r\n                                        <Card.Body>\r\n                                            <Grid className={\"rate\"} columnNum={4} data={[\r\n                                                {\r\n                                                    text: f.num,\r\n                                                }, {\r\n                                                    icon: 'https://img.icons8.com/color/96/000000/filled-like.png',\r\n                                                    text: f.likes,\r\n                                                }, {\r\n                                                    icon: 'https://img.icons8.com/color/96/000000/filled-topic.png',\r\n                                                    text: f.comments,\r\n                                                }, {\r\n                                                    icon: 'https://img.icons8.com/color/96/000000/undo.png',\r\n                                                    text: f.reposts,\r\n                                                },\r\n                                            ]} activeStyle={false} />\r\n                                        </Card.Body>\r\n                                    </Card>\r\n                                </div>\r\n                                )\r\n                            }\r\n                        </div> : <h1 style={{ paddingTop: 200, \"text-align\": \"center\" }}>\n                            Нет информации о данной группе\n                        </h1>\r\n                    }\r\n            </div>\r\n        );\r\n\t}\r\n};\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        followers:state.ratePage.followers,\r\n        group: state.ratePage.group,\r\n        myAccount: state.ratePage.myAccount\r\n    };\r\n}\r\nfunction matchDispatchToProps(dispatch){ \r\n    return bindActionCreators({ getFollowers, getGroupById, getFollowerById, regVKApp, vkWebAppGetUserInfo },dispatch);\r\n}\r\nexport default connect(mapStateToProps,matchDispatchToProps)(WebPage);\r\n","import 'babel-polyfill';\r\nimport React from 'react';\r\n\r\nimport { BrowserRouter,Switch,Route } from 'react-router-dom'; \r\n\r\nimport {Provider} from 'react-redux';\r\n\r\nimport {createStore , applyMiddleware} from \"redux\";\r\nimport allReducers from './store';\r\n\r\nimport WebPage from './routes/WebPage';\r\n\r\nimport {composeWithDevTools} from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\n\r\nconst store = createStore(allReducers,composeWithDevTools(applyMiddleware(thunk)));\r\nconst App = () => (\r\n\t<BrowserRouter>\r\n\t\t<Provider store={store}>\r\n            <Switch>\r\n\t\t\t\t<Route exact path='/' component={WebPage}/>\r\n\t\t\t</Switch>\r\n\t\t</Provider>\r\n\t</BrowserRouter>\r\n);\r\nexport default App;\r\n\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './js/';\r\nimport './index.less';\r\n\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nReactDOM.render(<App/>, document.getElementById('root'));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}