{"version":3,"sources":["utils/index.js","actions/ajax.js","store/RatePage.js","routes/WebPage.js","store/UserPage.js","store/index.js","App.js","index.js"],"names":["getParamsUrl","param","obj","window","location","search","replace","split","map","s","forEach","o","host","cookies","Cookies","ajax","url","params","token","get","Object","objectSpread","axios","defaults","headers","common","initialState","user","myAccount","group","followers","followers_count","followers_loading","getFollowers","groupId","sorter","_ref3","asyncToGenerator","regenerator_default","a","mark","_callee3","dispatch","getState","wrap","_context3","prev","next","type","payload","abrupt","then","result","data","isSuccess","object","count","items","stop","_x5","_x6","apply","this","arguments","getGroupById","socialId","_ref5","_callee5","_context5","catch","e","console","log","_x9","_x10","getFollowerById","followerId","_ref4","_callee4","_context4","_x7","_x8","regVKApp","_ref","_callee","_context","alert","connect","subscribe","detail","_x","_x2","vkWebAppGetUserInfo","_ref2","_callee2","_context2","send","_x3","_x4","WebPage","userId","props","_this$props","react_default","createElement","nav_bar","mode","style","textAlign","first_name","card","full","Header","title","concat","last_name","thumb","photo_100","thumbStyle","border-radius","width","extra","float","class","src","Body","grid","className","columnNum","text","icon","activeStyle","name","photo100","f","i","white_space","size","balls","num","likes","comments","reposts","paddingTop","text-align","Component","state","ratePage","bindActionCreators","user_loading","groups","groups_loading","actions","actions_count","actions_loading","statistic","allReducers","combineReducers","userPage","length","undefined","action","toConsumableArray","act","followersGroupActionId","isAddBalls","store","createStore","composeWithDevTools","applyMiddleware","thunk","App","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","activePanel","fetchedUser","react_router_dom","es","react_router","path","component","React","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.a3891f30.chunk.js","sourcesContent":["export const getParamsUrl = (param) => {\r\n\tvar obj = {};\r\n\twindow.location.search\r\n\t\t.replace(\"?\",\"\")\r\n\t\t.split(\"&\")\r\n\t\t.map(s=>s.split(\"=\"))\r\n\t\t.forEach((o)=>obj[o[0]] = o[1]);\r\n\treturn obj[param];\r\n} \r\nexport const host = \"https://vkmacro.ru/api\";\r\n","import axios from 'axios';\r\nimport Cookies from 'universal-cookie';\r\nconst cookies = new Cookies();\r\n\r\nexport default {\r\n\tget:(url,params) => {\r\n\t\tlet token = cookies.get('token');\r\n        params.params = { ...params.params };\r\n        axios.defaults.headers.common['Authorization'] = \"Bearer \" + token;\r\n\t\treturn axios.get(url, params);\r\n\t},\r\n\tpost:(url,params) => {\r\n        let token = cookies.get('token');\r\n        axios.defaults.headers.common['Authorization'] = \"Bearer \" + token;\r\n\t\tparams={...params};\r\n\t\treturn axios.post(url, params);\r\n\t}\r\n}\r\n","import { message } from 'antd';\r\nimport axios from '../actions/ajax';\r\n\r\nimport { host } from '../utils';\r\n\r\nimport connect from '@vkontakte/vkui-connect';\r\n\r\nimport { setInterval } from 'core-js';\r\n\r\nconst SELECTGROUP = 'SELECTGROUP';\r\nconst FOLLOWERS = 'FOLLOWERS';\r\nconst FOLLOWERS_LOADING = 'FOLLOWERS_LOADING';\r\nconst FOLLOWERS_COUNT = 'FOLLOWERS_COUNT';\r\nconst MYFOLLOWER = 'MYFOLLOWER';\r\nconst USER = 'USER';\r\n\r\nconst initialState = {\r\n    user: {},\r\n    myAccount: null,\r\n    group: {},\r\n    followers: [],\r\n    followers_count: [],\r\n    followers_loading: false\r\n};\n\r\nexport const storeRatePage = {\r\n    regVKApp: () => async (dispatch, getState) => {\r\n\t\talert(1)\r\n        connect.subscribe((e) => {\n            switch (e.detail.type) {\n                case 'VKWebAppGetUserInfoResult':\r\n\t\t\t\t\talert(3)\r\n\t\t\t\t\tdispatch({ type: USER, payload: e.detail.data });\n                    break;\n                default:\n                    console.log(e.detail.type);\n            }\n        });\r\n    },\r\n    vkWebAppGetUserInfo: () => async (dispatch, getState) => {\r\n\t\talert(2)\r\n        connect.send('VKWebAppGetUserInfo', {});\r\n    },\r\n    getFollowers: (groupId,sorter) => async (dispatch, getState) => {\r\n        if (!(groupId != null && groupId > 0)) {\r\n            dispatch({ type: FOLLOWERS_COUNT, payload: 0 });\r\n            dispatch({ type: FOLLOWERS, payload: [] });\r\n            return;\r\n        }\r\n        dispatch({ type: FOLLOWERS_LOADING, payload: true });\r\n        axios.get(host + \"/followers/GetFollowersFilter\", {\r\n            params: {\r\n                groupId,\r\n                sorter\r\n            }\r\n        })\r\n        .then((result) => {\r\n            result = result.data;\r\n            if (result.isSuccess) {\r\n                dispatch({ type: FOLLOWERS_COUNT, payload: result.object.count });\r\n                dispatch({ type: FOLLOWERS, payload: result.object.items });\r\n                dispatch({ type: FOLLOWERS_LOADING, payload: false });\r\n            }\r\n        });\r\n        \r\n    }, getFollowerById: (groupId, followerId) => async (dispatch, getState) => {\r\n        if (!followerId) return;\r\n        axios.get(host + \"/followers/GetFollowersFilter\", {\r\n            params: {\r\n                groupId,\r\n                followerId\r\n            }\r\n        })\r\n            .then((result) => {\r\n                result = result.data;\r\n                if (result.isSuccess) {\r\n                    if (result.object.count > 0) {\r\n                        dispatch({ type: MYFOLLOWER, payload: result.object.items[0] });\r\n                    }\r\n                } else {\r\n                    dispatch({ type: MYFOLLOWER, payload: null});\r\n                }\r\n            });\r\n\r\n    },\r\n    getGroupById: (socialId) => async (dispatch, getState) => {\r\n\r\n        axios.get(host + \"/group/GetGroupById\", {\r\n            params: {\r\n                socialId\r\n            }\r\n        })\r\n            .then((result) => {\r\n                result = result.data;\r\n                if (result.isSuccess) {\r\n                    dispatch({ type: SELECTGROUP, payload: result.object });\r\n                } else {\r\n                    dispatch({ type: SELECTGROUP, payload: null });\r\n                }\r\n\r\n            }).catch((e) => {\r\n                console.log(e);\r\n                dispatch({ type: SELECTGROUP, payload: null });\r\n            });\r\n\r\n    }\r\n    \r\n};\r\n\r\nexport const reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SELECTGROUP: return { ...state, group: action.payload};\r\n        case FOLLOWERS: return { ...state, followers: [ ...action.payload]};\r\n        case FOLLOWERS_COUNT: return { ...state, followers_count: action.payload};\r\n        case FOLLOWERS_LOADING: return { ...state, followers_loading: action.payload};\r\n        case MYFOLLOWER: return { ...state, myAccount: action.payload};\r\n        case USER: return { ...state, user: action.payload};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import React, { Component } from 'react';\r\n\r\nimport {bindActionCreators} from  'redux';\r\nimport {connect} from 'react-redux';\r\n\r\nimport { getParamsUrl } from '../utils';\r\n\r\nimport \"./WebPage.less\";\r\nimport { storeRatePage } from \"../store/RatePage\";\r\nimport { NavBar, Icon, Card, WhiteSpace, Grid} from 'antd-mobile';\r\n\r\nconst { getFollowers, getGroupById, getFollowerById, regVKApp, vkWebAppGetUserInfo } = storeRatePage;\r\n\r\nclass WebPage extends Component{\r\n    componentDidMount() {\r\n        var groupId = getParamsUrl(\"vk_group_id\");\n        var userId = getParamsUrl(\"vk_user_id\");\r\n\r\n        this.props.regVKApp();\r\n        this.props.vkWebAppGetUserInfo();\r\n        this.props.getFollowers(groupId);\r\n        this.props.getGroupById(groupId);\r\n        this.props.getFollowerById(groupId, userId);\r\n    }\r\n    render() {\r\n        const { followers, group, myAccount,user } = this.props;\r\n        return (\r\n            <div>\r\n                <NavBar\r\n                    mode=\"dark\"\r\n                >\r\n                    Рейтинг\r\n                </NavBar>\r\n                {\r\n                    group ?\r\n                        <div>\r\n                            <h2 style={{ textAlign: \"center\" }}></h2>\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tuser.first_name &&\r\n\t\t\t\t\t\t\t\t<Card full>\r\n\t\t\t\t\t\t\t\t\t<Card.Header\r\n\t\t\t\t\t\t\t\t\t\ttitle={`${user.first_name} ${user.last_name}`}\r\n\t\t\t\t\t\t\t\t\t\tthumb={`${user.photo_100}`}\r\n\t\t\t\t\t\t\t\t\t\tthumbStyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\"border-radius\": \"50%\",\r\n\t\t\t\t\t\t\t\t\t\t\t\"width\": \"50px\"\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\textra={\r\n\t\t\t\t\t\t\t\t\t\t\t<div style={{ \"float\": \"right\" }} class=\"am-card-header-content\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<img src=\"https://img.icons8.com/color/32/000000/coins.png\" />\r\n\t\t\t\t\t\t\t\t\t\t\t\t{100}\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<Card.Body>\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\tmyAccount ?\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Grid className={\"rate\"} columnNum={4} data={[\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttext: 101,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ticon: 'https://img.icons8.com/color/96/000000/filled-like.png',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttext: 0,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ticon: 'https://img.icons8.com/color/96/000000/filled-topic.png',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttext: 0,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ticon: 'https://img.icons8.com/color/96/000000/undo.png',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttext: 0,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t]} activeStyle={false} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t: <h3 style={{ textAlign: \"center\" }}>Нет активных действий</h3>\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t</Card.Body>\r\n\t\t\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t\t\t}\r\n                            <h2 style={{ textAlign: \"center\" }}>Группа</h2>\r\n                            <Card full>\r\n                                <Card.Header\r\n                                    title={group.name}\r\n                                    thumb={group.photo100}\r\n                                    thumbStyle={{\r\n                                        \"border-radius\": \"50%\"\r\n                                    }}\r\n                                    extra={\r\n                                        <div style={{ \"float\": \"right\" }} class=\"am-card-header-content\">\r\n                                            <img src=\"https://img.icons8.com/color/32/000000/coins.png\" />\r\n                                            {100}\r\n                                        </div>\r\n                                    }\r\n                                />\r\n                            </Card>\r\n                            <h2 style={{ textAlign: \"center\" }}>Рейтинг подписчиков</h2>\r\n                            {\r\n                                followers.map((f, i) => <div>\r\n                                    <WhiteSpace size=\"sm\" />\r\n                                    <Card full>\r\n                                        <Card.Header\r\n                                            title={f.name}\r\n                                            thumb={f.photo100}\r\n                                            thumbStyle={{\r\n                                                \"border-radius\": \"50%\",\r\n                                                \"width\": \"50px\"\r\n                                            }}\r\n                                            extra={\r\n                                                <div style={{ \"float\": \"right\" }} class=\"am-card-header-content\">\r\n                                                    <img src=\"https://img.icons8.com/color/32/000000/coins.png\" />\r\n                                                    {f.balls}\r\n                                                </div>\r\n                                            }\r\n                                        />\r\n                                        <Card.Body>\r\n                                            <Grid className={\"rate\"} columnNum={4} data={[\r\n                                                {\r\n                                                    text: f.num,\r\n                                                }, {\r\n                                                    icon: 'https://img.icons8.com/color/96/000000/filled-like.png',\r\n                                                    text: f.likes,\r\n                                                }, {\r\n                                                    icon: 'https://img.icons8.com/color/96/000000/filled-topic.png',\r\n                                                    text: f.comments,\r\n                                                }, {\r\n                                                    icon: 'https://img.icons8.com/color/96/000000/undo.png',\r\n                                                    text: f.reposts,\r\n                                                },\r\n                                            ]} activeStyle={false} />\r\n                                        </Card.Body>\r\n                                    </Card>\r\n                                </div>\r\n                                )\r\n                            }\r\n                        </div> : <h1 style={{ paddingTop: 200, \"text-align\": \"center\" }}>\n                            Нет информации о данной группе\n                        </h1>\r\n                    }\r\n            </div>\r\n        );\r\n\t}\r\n};\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        followers:state.ratePage.followers,\r\n        group: state.ratePage.group,\r\n        myAccount: state.ratePage.myAccount,\r\n        user: state.ratePage.user\r\n    };\r\n}\r\nfunction matchDispatchToProps(dispatch){ \r\n    return bindActionCreators({ getFollowers, getGroupById, getFollowerById, regVKApp, vkWebAppGetUserInfo },dispatch);\r\n}\r\nexport default connect(mapStateToProps,matchDispatchToProps)(WebPage);\r\n","import { message } from 'antd';\r\nimport axios from '../actions/ajax';\r\n\r\nimport { host } from '../utils';\r\n\r\nimport { setInterval } from 'core-js';\r\n\r\n\r\n\r\nconst USERPAGE_USER = 'USERPAGE_USER';\r\nconst USERPAGE_USER_LOADING = 'USERPAGE_USER_LOADING';\r\n\r\nconst USERPAGE_GROUPS = 'USERPAGE_GROUPS';\r\nconst USERPAGE_GROUPS_LOADING = 'USERPAGE_GROUPS_LOADING';\r\n\r\nconst USERPAGE_ACTION_UPDATE = 'USERPAGE_ACTION_UPDATE';\r\nconst USERPAGE_ACTIONS_COUNT = 'USERPAGE_COUNT';\r\nconst USERPAGE_ACTIONS = 'USERPAGE_ACTIONS';\r\nconst USERPAGE_ACTIONS_LOADING = 'USERPAGE_ACTIONS_LOADING';\r\n\r\nconst USERPAGE_USER_STATISTIC = 'USERPAGE_USER_STATISTIC';\r\n\r\nconst initialState = {\r\n    user: {},\r\n    user_loading: false,\r\n\r\n    groups:[],\r\n    groups_loading:false,\r\n\r\n    actions: [],\r\n    actions_count: 0,\r\n    actions_loading: false,\r\n\r\n    statistic: [],\r\n};\r\nexport const storeUserPage = {\r\n    getUser: (followerId) => async (dispatch, getState) => {\r\n        dispatch({ type: USERPAGE_USER_LOADING, payload: true });\r\n        axios.get(host + \"/followers/GetFollowersFilter\", {\r\n            params: {\r\n                followerId\r\n            }\r\n        })\r\n        .then((result) => {\r\n            result = result.data;\r\n            dispatch({ type: USERPAGE_USER_LOADING, payload: false });\r\n            if (result.isSuccess) {\r\n                dispatch({ type: USERPAGE_USER, payload: result.object.items[0] });\r\n            } else {\r\n                message.error(\"��� �� ����� �� ���. ������������� ��������\");\r\n                dispatch({ type: USERPAGE_USER, payload:[]});\r\n            }\r\n        })\r\n        .catch(() => {\r\n            message.error(\"��� �� ����� �� ���. ������������� ��������\");\r\n            dispatch({ type: USERPAGE_USER_LOADING, payload: false });\r\n            dispatch({ type: USERPAGE_USER, payload: [] });\r\n        });\r\n    },\r\n    getGroupsByFollower: (followerId) => async (dispatch, getState) => {\r\n        dispatch({ type: USERPAGE_GROUPS_LOADING, payload: true });\r\n        axios.get(host + \"/group/GetGroupsFilterV2\", {\r\n            params: {\r\n                followerId\r\n            }\r\n        })\r\n        .then((result) => {\r\n            result = result.data;\r\n            dispatch({ type: USERPAGE_GROUPS_LOADING, payload: false });\r\n            if (result.isSuccess) {\r\n                dispatch({ type: USERPAGE_GROUPS, payload: result.object});\r\n            }\r\n        })\r\n        .catch(() => {\r\n            message.error(\"��� �� ����� �� ���. ������������� ��������\");\r\n            dispatch({ type: USERPAGE_GROUPS_LOADING, payload: false });\r\n            dispatch({ type: USERPAGE_GROUPS, payload: [] });\r\n        });\r\n    },\r\n    changeBalls: (followersGroupActionId, isAddBalls) => async (dispatch, getState) => {\r\n        dispatch({ type: USERPAGE_ACTIONS_LOADING, payload: true });\r\n        axios.post(host + \"/followers/ChangeBalls\", {\r\n            followersGroupActionId,\r\n            isAddBalls\r\n        })\r\n            .then((result) => {\r\n                result = result.data;\r\n                dispatch({ type: USERPAGE_ACTIONS_LOADING, payload: false });\r\n                if (result.isSuccess) {\r\n                    dispatch({ type: USERPAGE_ACTION_UPDATE, payload: { followersGroupActionId, isAddBalls } });\r\n                }\r\n            })\r\n            .catch(() => {\r\n                message.error(\"��� �� ����� �� ���. ������������� ��������\");\r\n                dispatch({ type: USERPAGE_ACTIONS_LOADING, payload: false });\r\n            });\r\n    },\r\n    getActionsStatistic: (followerId, groupId) => async (dispatch, getState) => {\r\n        axios.get(host + \"/followers/getActionsStatistic\", {\r\n            params: {\r\n                followerId,\r\n                groupId,\r\n            }\r\n        })\r\n            .then((result) => {\r\n                result = result.data;\r\n                if (result.isSuccess) {\r\n                    dispatch({ type: USERPAGE_USER_STATISTIC, payload: result.object });\r\n                }\r\n            })\r\n            .catch(() => {\r\n                message.error(\"��� �� ����� �� ���. ������������� ��������\");\r\n            });\r\n    },\r\n    changeBallsFollower: (followerId, groupId) => async (dispatch, getState) => {\r\n        axios.post(host + \"/followers/ChangeBallsByUser\", {\r\n                followerId,\r\n                groupId,\r\n        })\r\n            .then((result) => {\r\n                result = result.data;\r\n                if (result.isSuccess) {\r\n                    dispatch({ type: USERPAGE_ACTIONS, payload: [] });\r\n                    dispatch({ type: USERPAGE_USER_STATISTIC, payload: { likes: 0, comments: 0, reposts: 0 } });\r\n                }\r\n            })\r\n            .catch(() => {\r\n                message.error(\"��� �� ����� �� ���. ������������� ��������\");\r\n            });\r\n    },\r\n    getFollowerActionsFilter: (followerId, groupId,sorter) => async (dispatch, getState) => {\r\n        dispatch({ type: USERPAGE_ACTIONS_LOADING, payload: true });\r\n        axios.get(host + \"/followers/GetFollowerActionsFilter\", {\r\n            params: {\r\n                followerId,\r\n                groupId,\r\n                sorter\r\n            }\r\n        })\r\n        .then((result) => {\r\n            result = result.data;\r\n            dispatch({ type: USERPAGE_ACTIONS_LOADING, payload: false });\r\n            if (result.isSuccess) {\r\n                dispatch({ type: USERPAGE_ACTIONS_COUNT, payload: result.object.count });\r\n                dispatch({ type: USERPAGE_ACTIONS, payload: result.object.items });\r\n            }\r\n        })\r\n        .catch(() => {\r\n            message.error(\"��� �� ����� �� ���. ������������� ��������\");\r\n            dispatch({ type: USERPAGE_ACTIONS_LOADING, payload: false });\r\n            dispatch({ type: USERPAGE_ACTIONS_COUNT, payload: 0 });\r\n            dispatch({ type: USERPAGE_ACTIONS, payload: [] });\r\n        });\r\n    }\r\n};\r\n\r\nexport const reducer = (state = initialState, action) => {\r\n    switch (action.type) {\n        case USERPAGE_USER: return { ...state, user: {...action.payload}};\n        case USERPAGE_USER_LOADING: return { ...state, user_loading: action.payload };\n\n        case USERPAGE_GROUPS: return { ...state, groups: [...action.payload] };\n        case USERPAGE_GROUPS_LOADING: return { ...state, groups_loading: action.payload };\n\n        case USERPAGE_ACTIONS: return { ...state, actions: [...action.payload] };\n        case USERPAGE_ACTION_UPDATE: {\r\n            return {\r\n                ...state, actions: state.actions.map(act =>\n                    act.followersGroupActionId == action.payload.followersGroupActionId ?\r\n                        { ...act, isAddBalls: action.payload.isAddBalls }\r\n                        :\r\n                        act\r\n                )\r\n            };\n        }\n        case USERPAGE_ACTIONS_COUNT: return { ...state, actions_count: action.payload};\n        case USERPAGE_ACTIONS_LOADING: return { ...state, actions_loading: action.payload };\n\n        case USERPAGE_USER_STATISTIC: return { ...state, statistic: action.payload};\n        default:\n            return state;\n    }\r\n};\r\n","import {combineReducers} from 'redux';\r\n\r\n//import * as Groups from '../store/Groups';\r\n//import * as Followers from '../store/Followers';\r\n//import * as Auth from '../store/Auth';\r\nimport * as UserPage from '../store/UserPage';\r\nimport * as RatePage from '../store/RatePage';\r\n\r\nconst allReducers = combineReducers ({\r\n   // groups: Groups.reducer,\r\n   // followers: Followers.reducer,\r\n    //auth: Auth.reducer,\r\n    userPage: UserPage.reducer,\r\n    ratePage: RatePage.reducer,\r\n\t\r\n});\r\n\r\nexport default allReducers;\r\n","import React from 'react';\nimport connect from '@vkontakte/vkui-connect';\n\nimport { BrowserRouter,Switch,Route } from 'react-router-dom'; \n\nimport WebPage from './routes/WebPage';\n \r\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport allReducers from './store';\n\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\n\nconst store = createStore(allReducers, composeWithDevTools(applyMiddleware(thunk)));\nclass App extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tactivePanel: 'home',\n\t\t\tfetchedUser: null,\n\t\t};\n\t}\n\trender() {\n        return (\n\t\t\t<BrowserRouter>\n\t\t\t\t<Provider store={store}>\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route path='/' component={WebPage}/>\n\t\t\t\t\t</Switch>\n\t\t\t\t</Provider>\n\t\t\t</BrowserRouter>\n\t\t);\n\t}\n}\nexport default App;\n","import 'core-js/es6/map';\nimport 'core-js/es6/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom'; \nimport connect from '@vkontakte/vkui-connect';\nimport App from './App';\n\nimport { NavBar } from 'antd-mobile';\n\n\n// import registerServiceWorker from './sw';\n\n// Init VK App\nconnect.send('VKWebAppInit', {});\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT \n// registerServiceWorker();\n\nReactDOM.render(<App/>, document.getElementById('root'));\n"],"sourceRoot":""}